<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="software.dao.UserPostsMapper">
    <resultMap id="BaseResultMap" type="software.model.UserPosts">
        <id column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="post_title" jdbcType="VARCHAR" property="postTitle"/>
        <result column="post_data" jdbcType="VARCHAR" property="postData"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deal_time" jdbcType="TIMESTAMP" property="dealTime"/>
        <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        <result column="mother_post_id" jdbcType="INTEGER" property="motherPostId"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
    </resultMap>
    <sql id="Base_Column_List">
    pid, uid, nick_name, post_title, post_data, create_time, deal_time, comment_count, mother_post_id,
    level
  </sql>
    <resultMap id="IndexResultMap" type="software.jsonModel.IndexObject">
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="pid" jdbcType="VARCHAR" property="pid"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="post_title" jdbcType="VARCHAR" property="postTitle"/>
        <result column="post_data" jdbcType="VARCHAR" property="postData"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deal_time" jdbcType="TIMESTAMP" property="dealTime"/>
        <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
    </resultMap>

    <select id="selectAllPostsByTime" resultMap="IndexResultMap">
        select * from users_posts where  deal_time = #{time,jdbcType=TIMESTAMP};
        </select>

    <select id="selectAllUserPosts" resultMap="IndexResultMap">
  select uid, pid , nick_name, post_title,post_data,create_time,deal_time ,comment_count,level  from users_posts where
  mother_post_id
  = -1
  ORDER BY create_time DESC ;
</select>
    <select id="selectAllUserPostByMotherId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select *  from users_posts where mother_post_id =#{motherPostId,jdbcType=INTEGER} or pid =
  #{motherPostId,jdbcType=INTEGER}
  ORDER  BY create_time ASC;
</select>
    <select id="selectUserPostByPostId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_posts where pid = #{pid,jdbcType=INTEGER}
    </select>

    <select id="selectUserReplyByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_posts where uid = #{uid,jdbcType=INTEGER} and mother_post_id != -1
    </select>

    <select id="selectUserPostByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_posts where
        uid = #{uid,jdbcType=INTEGER} and mother_post_id = -1 ORDER BY create_time desc
    </select>

    <select id="selectOtherPostByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_posts where
        user_id = #{userId,jdbcType=INTEGER} and mother_post_id != -1 ORDER BY create_time desc;
    </select>

    <delete id="deleteByPostId" parameterType="java.lang.Integer">
          delete from users_posts
          where pid = #{pid,jdbcType=INTEGER} or mother_post_id = #{pid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByMotherPostId" parameterType="java.lang.Integer">
          delete from users_posts
          where  mother_post_id = #{motherPostId,jdbcType=INTEGER}
    </delete>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_posts
        where pid = #{pid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_posts
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="software.model.UserPosts">
    insert into users_posts (pid, uid, nick_name, 
      post_title, post_data, create_time, deal_time,
      comment_count, mother_post_id, level
      )
    values (#{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, 
      #{postTitle,jdbcType=VARCHAR}, #{postData,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{deal_time,jdbcType=TIMESTAMP},
      #{commentCount,jdbcType=INTEGER}, #{motherPostId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="software.model.UserPosts">
        insert into users_posts
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="postTitle != null">
                post_title,
            </if>
            <if test="postData != null">
                post_data,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dealTime != null">
                deal_time,
            </if>
            <if test="commentCount != null">
                comment_count,
            </if>
            <if test="motherPostId != null">
                mother_post_id,
            </if>
            <if test="level != null">
                level,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="postTitle != null">
                #{postTitle,jdbcType=VARCHAR},
            </if>
            <if test="postData != null">
                #{postData,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dealTime != null">
                #{dealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentCount != null">
                #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="motherPostId != null">
                #{motherPostId,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="software.model.UserPosts">
        update users_posts
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="postTitle != null">
                post_title = #{postTitle,jdbcType=VARCHAR},
            </if>
            <if test="postData != null">
                post_data = #{postData,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dealTime != null">
                deal_time = #{dealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="motherPostId != null">
                mother_post_id = #{motherPostId,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
        </set>
        where pid = #{pid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="software.model.UserPosts">
    update users_posts
    set uid = #{uid,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      post_title = #{postTitle,jdbcType=VARCHAR},
      post_data = #{postData,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      mother_post_id = #{motherPostId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>
