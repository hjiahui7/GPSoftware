<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="software.dao.UserPostsMapper">
  <resultMap id="BaseResultMap" type="software.model.UserPosts">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_data" jdbcType="VARCHAR" property="postData" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="mother_post_id" jdbcType="INTEGER" property="motherPostId" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, nick_name, post_title, post_data, create_time, comment_count, mother_post_id, 
    level
  </sql>

  <resultMap id="IndexResultMap" type="software.jsonModel.IndexObject">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_data" jdbcType="VARCHAR" property="postData" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
  </resultMap>
  <select id="selectAllUserPosts" resultMap="IndexResultMap">
  select id , nick_name, post_title,post_data,create_time ,comment_count  from users_posts where mother_post_id = -1
  ORDER BY create_time DESC ;
</select>
  <select id="selectAllUserPostByMotherId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select *  from users_posts where mother_post_id =#{motherPostId,jdbcType=INTEGER} or id = #{motherPostId,jdbcType=INTEGER}
  ORDER  BY create_time ASC;
</select>
  <select id="selectUserPostByPostId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from users_posts where  id = #{postId,jdbcType=INTEGER}
  </select>

  <select id="selectUserPostByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from users_posts where
     user_id = #{userId,jdbcType=INTEGER} and mother_post_id = -1 ORDER BY create_time desc
  </select>

  <select id="selectOtherPostByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from users_posts where
    user_id = #{userId,jdbcType=INTEGER} and mother_post_id != -1 ORDER  BY create_time desc;
  </select>


  <delete id="deleteByPostId" parameterType="java.lang.Integer">

    delete from users_posts
    where id = #{postId,jdbcType=INTEGER} or mother_post_id = #{postId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByMotherPostId" parameterType="java.lang.Integer">
    delete from users_posts
    where  mother_post_id = #{motherPostId,jdbcType=INTEGER}
  </delete>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users_posts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_posts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="software.model.UserPosts">
    insert into users_posts (id, user_id, nick_name, 
      post_title, post_data, create_time, 
      comment_count, mother_post_id, level
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, 
      #{postTitle,jdbcType=VARCHAR}, #{postData,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{commentCount,jdbcType=INTEGER}, #{motherPostId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="software.model.UserPosts"  useGeneratedKeys="true" keyProperty="id" >
    insert into users_posts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="postTitle != null">
        post_title,
      </if>
      <if test="postData != null">
        post_data,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="motherPostId != null">
        mother_post_id,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="postTitle != null">
        #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postData != null">
        #{postData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="motherPostId != null">
        #{motherPostId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="software.model.UserPosts">
    update users_posts
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="postTitle != null">
        post_title = #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postData != null">
        post_data = #{postData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="motherPostId != null">
        mother_post_id = #{motherPostId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="software.model.UserPosts">
    update users_posts
    set user_id = #{userId,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      post_title = #{postTitle,jdbcType=VARCHAR},
      post_data = #{postData,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      mother_post_id = #{motherPostId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
